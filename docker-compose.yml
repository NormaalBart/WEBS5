version: '3.8'

services:
  apigateway:
    build:
      context: ./apigateway
      dockerfile: /Dockerfile
    volumes:
      - ./apigateway:/app
    ports:
      - "3000:3000"
    environment:
      - "IMAGE_SERVICE=http://imageservice:5672/"
      - "AUTH_SERVICE=http://authservice:5672/"
    restart: always
  imageservice:
    build:
      context: ./imageservice
      dockerfile: /Dockerfile
    volumes:
      - ./imageservice:/app
      - ./data/images:/app/images
    depends_on:
      - postgres
    environment:
      - DATABASE_URL=postgres://admin:ohzomoeilijkwachtwoord@postgres:5432/photoprestige
      - PORT=5672
    restart: always
  authservice:
    build:
      context: ./authservice
      dockerfile: /Dockerfile
    volumes:
      - ./authservice:/app
    depends_on:
      - postgres
    environment:
      - DATABASE_URL=postgres://admin:ohzomoeilijkwachtwoord@postgres:5432/photoprestige
      - PORT=5672
    restart: always
  postgres:
    image: postgres:16
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
      - ./imageservicedb/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: ohzomoeilijkwachtwoord
      POSTGRES_DB: photoprestige
    restart: always
  mailhog:
    image: mailhog/mailhog
    environment:
      MH_STORAGE: maildir
      MH_MAILDIR_PATH: /home/mailhog
    volumes:
      - ./data/mailhog:/home/mailhog
    ports:
      - "1025:1025" # SMTP server
      - "8025:8025" # Web interface
    restart: always
  rabbitmq:
    image: "rabbitmq:3.13-management"
    volumes:
      - "./data/rabbitmq:/var/lib/rabbitmq"
    ports:
      - "5672:5672" # AMQP protocol port
      - "15672:15672" # Web management interface
    environment:
      RABBITMQ_DEFAULT_USER: "user"
      RABBITMQ_DEFAULT_PASS: "password"
    restart: always
